{"version":3,"sources":["components/Navbar.js","components/screens/Home.js","components/screens/Signin.js","components/screens/Profile.js","components/screens/UserProfile.js","components/screens/Signup.js","components/screens/CreatePost.js","components/screens/SubscribesUserPosts.js","reducers/userReducer.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","useContext","UserContext","state","dispatch","history","useHistory","className","to","id","onClick","localStorage","clear","type","push","Home","useState","data","setData","useEffect","fetch","headers","Authorization","getItem","then","response","json","result","status","posts","map","item","key","_id","style","padding","postedBy","name","float","cursor","postId","method","newData","filter","src","photo","alt","maxHeight","color","likes","includes","body","JSON","stringify","res","catch","err","console","log","length","title","comments","comment","fontWeight","text","onSubmit","e","preventDefault","target","value","placeholder","Signin","password","setPassword","email","setEmail","onChange","error","M","toast","html","classes","setItem","token","user","payload","Profile","mypics","setPics","image","setImage","myPost","FormData","append","pic","url","maxWidth","margin","borderBottom","display","justifyContent","width","borderRadius","followers","following","file","files","UserProfile","userProfile","setUserProfile","userid","useParams","showFollow","setShowFollow","height","followId","prevState","unfollowId","newFollower","Signup","setName","undefined","setUrl","uploadFields","message","uploadPic","CreatePost","setTitle","setBody","textAlign","SubscribesUserPosts","reducer","action","createContext","Routing","parse","exact","path","component","App","useReducer","Provider","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a2a7d63b.chunk.js","sourcesContent":["import React, { useContext } from \"react\";\nimport { UserContext } from \"../App\";\nimport { Link, useHistory } from \"react-router-dom\";\n\nconst Navbar = () => {\n  const { state, dispatch } = useContext(UserContext);\n  const history = useHistory();\n  const renderList = () => {\n    if (state) {\n      return [\n        <li>\n          <Link to=\"/profile\">Profile</Link>\n        </li>,\n        <li>\n          <Link to=\"/create\">Create Post</Link>\n        </li>,\n        <li>\n          <Link to=\"/myfollowingpost\">My Following Posts</Link>\n        </li>,\n        <li>\n          <button\n            className=\"btn #c62828 red darken-3 \"\n            onClick={() => {\n              localStorage.clear();\n              dispatch({ type: \"CLEAR\" });\n              history.push(\"/signin\");\n            }}\n          >\n            Logout\n          </button>\n        </li>,\n      ];\n    } else {\n      return [\n        <li>\n          <Link to=\"/signin\">Sign-In</Link>\n        </li>,\n        <li>\n          <Link to=\"/signup\">Sign-Up</Link>\n        </li>,\n      ];\n    }\n  };\n  return (\n    <nav>\n      <div className=\"nav-wrapper white\">\n        <Link to={state ? \"/\" : \"/signin\"} className=\"brand-logo left\">\n          SocialDev\n        </Link>\n        <ul id=\"nav-mobile\" className=\"right\">\n          {renderList()}\n        </ul>\n      </div>\n    </nav>\n  );\n};\n\nexport default Navbar;\n","import React, { useState, useEffect, useContext } from \"react\";\nimport { UserContext } from \"../../App\";\nimport { Link } from \"react-router-dom\";\n\nconst Home = () => {\n  const [data, setData] = useState([]);\n  const { state, dispatch } = useContext(UserContext);\n  useEffect(() => {\n    fetch(\"http://localhost:5000/allposts\", {\n      headers: {\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\n      },\n    })\n      .then((response) => response.json())\n      .then((result) => {\n        // console.log(result);\n        setData(result.status.posts);\n      });\n  }, []);\n\n  const likePost = (id) => {\n    fetch(\"http://localhost:5000/like\", {\n      method: \"put\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\n      },\n      body: JSON.stringify({\n        postId: id,\n      }),\n    })\n      .then((res) => res.json())\n      .then((result) => {\n        const newData = data.map((item) => {\n          if (item._id === result._id) {\n            return result;\n          } else {\n            return item;\n          }\n        });\n\n        setData(newData);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  const unlikePost = (id) => {\n    fetch(\"http://localhost:5000/unlike\", {\n      method: \"put\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\n      },\n      body: JSON.stringify({\n        postId: id,\n      }),\n    })\n      .then((res) => res.json())\n      .then((result) => {\n        const newData = data.map((item) => {\n          if (item._id === result._id) {\n            return result;\n          } else {\n            return item;\n          }\n        });\n\n        setData(newData);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  const makeComment = (text, postId) => {\n    fetch(\"http://localhost:5000/comment\", {\n      method: \"put\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\n      },\n      body: JSON.stringify({\n        postId,\n        text,\n      }),\n    })\n      .then((res) => res.json())\n      .then((result) => {\n        const newData = data.map((item) => {\n          if (item._id === result._id) {\n            return result;\n          } else {\n            return item;\n          }\n        });\n        setData(newData);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  const deletePost = (postId) => {\n    fetch(`http://localhost:5000/deletepost/${postId}`, {\n      method: \"delete\",\n      headers: {\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\n      },\n    })\n      .then((response) => response.json())\n      .then((result) => {\n        // console.log(result);\n        const newData = data.filter((item) => {\n          return item._id !== result._id;\n        });\n        setData(newData);\n      });\n  };\n\n  return (\n    <div className=\"home\">\n      {data.map((item) => {\n        return (\n          <div className=\"card home-card\" key={item._id}>\n            <h5 style={{ padding: \"6px\" }}>\n              <Link\n                to={\n                  item.postedBy._id !== state._id\n                    ? \"/profile/\" + item.postedBy._id\n                    : \"/profile\"\n                }\n              >\n                {item.postedBy.name}\n              </Link>{\" \"}\n              {item.postedBy._id == state._id && (\n                <i\n                  className=\"material-icons\"\n                  style={{ float: \"right\", cursor: \"pointer\" }}\n                  onClick={() => deletePost(item._id)}\n                >\n                  delete\n                </i>\n              )}\n            </h5>\n            <div className=\"card-image\">\n              <img\n                src={item.photo}\n                alt=\"home-post\"\n                style={{ maxHeight: \"500px\" }}\n              />\n            </div>\n            <div className=\"card-content input-field\">\n              <i className=\"material-icons\" style={{ color: \"red\" }}>\n                favorite\n              </i>\n              {item.likes.includes(state._id) ? (\n                <i\n                  className=\"material-icons\"\n                  onClick={() => unlikePost(item._id)}\n                >\n                  thumb_down\n                </i>\n              ) : (\n                <i\n                  className=\"material-icons\"\n                  onClick={() => likePost(item._id)}\n                >\n                  thumb_up\n                </i>\n              )}\n              <h6>{item.likes.length} likes</h6>\n              <h6>{item.title}</h6>\n              <p>{item.body}</p>\n              {item.comments.map((comment) => {\n                return (\n                  <h6>\n                    <span style={{ fontWeight: \"500\" }}>\n                      {comment.postedBy.name}\n                    </span>{\" \"}\n                    {comment.text}\n                  </h6>\n                );\n              })}\n              <form\n                onSubmit={(e) => {\n                  e.preventDefault();\n                  makeComment(e.target[0].value, item._id);\n                }}\n              >\n                <input type=\"text\" placeholder=\"add a comment\" />\n              </form>\n            </div>\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default Home;\n","import React, { useState, useContext } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { UserContext } from \"../../App\";\nimport M from \"materialize-css\";\n\nconst Signin = () => {\n  const { state, dispatch } = useContext(UserContext);\n  const history = useHistory();\n  const [password, setPassword] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const PostData = () => {\n    fetch(\"http://localhost:5000/signin\", {\n      method: \"post\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        password,\n        email,\n      }),\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        if (data.error) {\n          M.toast({ html: data.error, classes: \"#c62828 red darken-3\" });\n        } else {\n          localStorage.setItem(\"jwt\", data.status.token);\n          localStorage.setItem(\"user\", JSON.stringify(data.status.user));\n          dispatch({ type: \"USER\", payload: data.status.user });\n          M.toast({\n            html: \"Signedin Success\",\n            classes: \"#43a047 green darken-1\",\n          });\n          history.push(\"/\");\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n  return (\n    <div className=\"auth-wrapper\">\n      <div className=\"card auth-card input-field\">\n        <h2>SocialDev</h2>\n        <input\n          type=\"text\"\n          value={email}\n          onChange={(e) => setEmail(e.target.value)}\n          placeholder=\"E-Mail\"\n        />\n        <input\n          type=\"password\"\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n          placeholder=\"Password\"\n        />\n        <button\n          className=\"btn waves-effect waves-dark #7e57c2 deep-purple darken-1 \"\n          onClick={PostData}\n        >\n          Sign-In\n        </button>\n        <h5>\n          <Link to=\"/signup\">Don't have an account ?</Link>\n        </h5>\n      </div>\n    </div>\n  );\n};\n\nexport default Signin;\n","import React, { useEffect, useState, useContext } from \"react\";\nimport { UserContext } from \"../../App\";\n\nconst Profile = () => {\n  const [mypics, setPics] = useState([]);\n  const { state, dispatch } = useContext(UserContext);\n  const [image, setImage] = useState(\"\");\n  const [url, setUrl] = useState(\"\");\n  useEffect(() => {\n    fetch(\"http://localhost:5000/mypost\", {\n      headers: {\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\n      },\n    })\n      .then((response) => response.json())\n      .then((result) => {\n        if (result.error) setPics({ error: result.error });\n        else setPics(result.status.myPost);\n      });\n  }, []);\n\n  useEffect(() => {\n    if (image) {\n      const data = new FormData();\n      data.append(\"file\", image);\n      data.append(\"upload_preset\", \"social_dev\");\n      data.append(\"cloud_name\", \"dcuyktl8e\");\n      fetch(\"https://api.cloudinary.com/v1_1/dcuyktl8e/image/upload\", {\n        method: \"post\",\n        body: data,\n      })\n        .then((response) => response.json())\n        .then((data) => {\n          fetch(\"http://localhost:5000/updatepic\", {\n            method: \"put\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n              Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\n            },\n            body: JSON.stringify({ pic: data.url }),\n          })\n            .then((response) => response.json())\n            .then((result) => {\n              localStorage.setItem(\n                \"user\",\n                JSON.stringify({ ...state, pic: result.pic })\n              );\n              dispatch({ type: \"UPDATEPIC\", payload: result.pic });\n            });\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    }\n  }, [image]);\n\n  const changePhoto = (file) => {\n    setImage(file);\n  };\n\n  return (\n    <div style={{ maxWidth: \"600px\", margin: \"0px auto\" }}>\n      <div\n        style={{\n          margin: \"18px 0px\",\n          borderBottom: \"1px solid grey\",\n        }}\n      >\n        <div\n          style={{\n            display: \"flex\",\n            justifyContent: \"space-around\",\n          }}\n        >\n          <div>\n            <img\n              src={state ? state.pic : \"loading\"}\n              style={{ width: \"200px\", borderRadius: \"80px\" }}\n              alt=\"profile\"\n            />\n          </div>\n          <div>\n            <h4>{state ? state.name : \"loading\"}</h4>\n            <h5>{state ? state.email : \"loading\"}</h5>\n            <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n              <h6>{!mypics.error ? mypics.length : \"0\"} Posts</h6>\n              <h6>{state ? state.followers.length : \"0\"} followers</h6>\n              <h6>{state ? state.following.length : \"0\"} following</h6>\n            </div>\n          </div>\n        </div>\n        <div className=\"file-field input-field\" style={{ margin: \"10px\" }}>\n          <div className=\"btn  waves-effect waves-light #7e57c2 deep-purple darken-1\">\n            <span>Upload Pic</span>\n            <input\n              type=\"file\"\n              onChange={(e) => changePhoto(e.target.files[0])}\n            />\n          </div>\n          <div className=\"file-path-wrapper\">\n            <input className=\"file-path validate\" type=\"text\" />\n          </div>\n        </div>\n      </div>\n      <div className=\"gallery\">\n        {!mypics.error ? (\n          <>\n            {mypics.map((item) => {\n              return (\n                <img\n                  key={item._id}\n                  className=\"item\"\n                  src={item.photo}\n                  alt={item.title}\n                />\n              );\n            })}\n          </>\n        ) : (\n          <h5>{mypics.error}</h5>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Profile;\n","import React, { useEffect, useState, useContext } from \"react\";\nimport { UserContext } from \"../../App\";\nimport { useParams } from \"react-router-dom\";\n\nconst UserProfile = () => {\n  const [userProfile, setUserProfile] = useState(null);\n  const { state, dispatch } = useContext(UserContext);\n  const { userid } = useParams();\n  const [showFollow, setShowFollow] = useState(true);\n  useEffect(() => {\n    fetch(`http://localhost:5000/user/${userid}`, {\n      headers: {\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\n      },\n    })\n      .then((response) => response.json())\n      .then((result) => {\n        setUserProfile(result);\n      });\n  }, []);\n\n  const followUser = () => {\n    fetch(\"http://localhost:5000/followers\", {\n      method: \"put\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\n      },\n      body: JSON.stringify({\n        followId: userid,\n      }),\n    })\n      .then((response) => response.json())\n      .then((result) => {\n        // console.log(result);\n        dispatch({\n          type: \"UPDATE\",\n          payload: { following: result.following, followers: result.followers },\n        });\n        localStorage.setItem(\"user\", JSON.stringify(result));\n        setUserProfile((prevState) => {\n          return {\n            ...prevState,\n            user: {\n              ...prevState.user,\n              followers: [...prevState.user.followers, result._id],\n            },\n          };\n        });\n        setShowFollow(false);\n      });\n  };\n\n  const unfollowUser = () => {\n    fetch(\"http://localhost:5000/unfollow\", {\n      method: \"put\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\n      },\n      body: JSON.stringify({\n        unfollowId: userid,\n      }),\n    })\n      .then((response) => response.json())\n      .then((result) => {\n        // console.log(result);\n        dispatch({\n          type: \"UPDATE\",\n          payload: { following: result.following, followers: result.followers },\n        });\n        localStorage.setItem(\"user\", JSON.stringify(result));\n        setUserProfile((prevState) => {\n          const newFollower = prevState.user.followers.filter(\n            (item) => item != result._id\n          );\n          return {\n            ...prevState,\n            user: {\n              ...prevState.user,\n              followers: newFollower,\n            },\n          };\n        });\n      });\n  };\n\n  return (\n    <>\n      {userProfile ? (\n        <div style={{ maxWidth: \"550px\", margin: \"0px auto\" }}>\n          <div\n            style={{\n              display: \"flex\",\n              justifyContent: \"space-around\",\n              margin: \"18px 0px\",\n              borderBottom: \"1px solid grey\",\n            }}\n          >\n            <div>\n              <img\n                src={userProfile.user.pic}\n                style={{\n                  width: \"160px\",\n                  height: \"160px\",\n                  borderRadius: \"80px\",\n                }}\n                alt=\"profile\"\n              />\n            </div>\n            <div>\n              <h4>{userProfile.user.name}</h4>\n              <h4>{userProfile.user.email}</h4>\n              <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n                <h6>{userProfile.posts.length} Posts</h6>\n                <h6>{userProfile.user.followers.length} followers</h6>\n                <h6>{userProfile.user.following.length} following</h6>\n              </div>\n              {showFollow ? (\n                <button\n                  className=\"btn waves-effect waves-dark #7e57c2 deep-purple darken-1 \"\n                  onClick={() => followUser()}\n                  style={{ margin: \"10px\" }}\n                >\n                  Follow\n                </button>\n              ) : (\n                <button\n                  className=\"btn waves-effect waves-dark #7e57c2 deep-purple darken-1 \"\n                  onClick={() => unfollowUser()}\n                  style={{ margin: \"10px\" }}\n                >\n                  unFollow\n                </button>\n              )}\n            </div>\n          </div>\n          <div className=\"gallery\">\n            {userProfile.posts.map((item) => {\n              return (\n                <img\n                  key={item._id}\n                  className=\"item\"\n                  src={item.photo}\n                  alt={item.title}\n                />\n              );\n            })}\n          </div>\n        </div>\n      ) : (\n        <h2>loading ...</h2>\n      )}\n    </>\n  );\n};\n\nexport default UserProfile;\n","import React, { useState, useEffect } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport M from \"materialize-css\";\n\nconst Signup = () => {\n  const history = useHistory();\n  const [name, setName] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [image, setImage] = useState(\"\");\n  const [url, setUrl] = useState(undefined);\n\n  useEffect(() => {\n    if (url) {\n      uploadFields();\n    }\n  }, [url]);\n\n  const uploadPic = () => {\n    const data = new FormData();\n    data.append(\"file\", image);\n    data.append(\"upload_preset\", \"social_dev\");\n    data.append(\"cloud_name\", \"dcuyktl8e\");\n    fetch(\"https://api.cloudinary.com/v1_1/dcuyktl8e/image/upload\", {\n      method: \"post\",\n      body: data,\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        //console.log(data);\n        setUrl(data.url);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  const uploadFields = () => {\n    fetch(\"http://localhost:5000/signup\", {\n      method: \"post\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        name,\n        password,\n        email,\n        pic: url,\n      }),\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        if (data.error) {\n          M.toast({ html: data.error, classes: \"#c62828 red darken-3\" });\n        } else {\n          M.toast({\n            html: data.status.message,\n            classes: \"#43a047 green darken-1\",\n          });\n          history.push(\"/signin\");\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  const PostData = () => {\n    if (image) {\n      uploadPic();\n    } else {\n      uploadFields();\n    }\n  };\n  return (\n    <div className=\"auth-wrapper\">\n      <div className=\"card auth-card input-field\">\n        <h2>SocialDev</h2>\n        <input\n          type=\"text\"\n          value={name}\n          onChange={(e) => setName(e.target.value)}\n          placeholder=\"Name\"\n        />\n        <input\n          type=\"text\"\n          value={email}\n          onChange={(e) => setEmail(e.target.value)}\n          placeholder=\"E-Mail\"\n        />\n        <input\n          type=\"password\"\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n          placeholder=\"Password\"\n        />\n        <div className=\"file-field input-field\">\n          <div className=\"btn  waves-effect waves-light #7e57c2 deep-purple darken-1\">\n            <span>Upload Pic</span>\n            <input type=\"file\" onChange={(e) => setImage(e.target.files[0])} />\n          </div>\n          <div className=\"file-path-wrapper\">\n            <input className=\"file-path validate\" type=\"text\" />\n          </div>\n        </div>\n        <button\n          className=\"btn waves-effect waves-dark #7e57c2 deep-purple darken-1 \"\n          onClick={PostData}\n        >\n          Sign-Up\n        </button>\n        <h5>\n          <Link to=\"/signin\">Already have an account ?</Link>\n        </h5>\n      </div>\n    </div>\n  );\n};\n\nexport default Signup;\n","import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport M from \"materialize-css\";\n\nconst CreatePost = () => {\n  const history = useHistory();\n  const [title, setTitle] = useState(\"\");\n  const [body, setBody] = useState(\"\");\n  const [image, setImage] = useState(\"\");\n  const [url, setUrl] = useState(\"\");\n\n  useEffect(() => {\n    if (url) {\n      fetch(\"http://localhost:5000/createpost\", {\n        method: \"post\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\n        },\n        body: JSON.stringify({\n          title,\n          body,\n          pic: url,\n        }),\n      })\n        .then((response) => response.json())\n        .then((data) => {\n          if (data.error) {\n            M.toast({ html: data.error, classes: \"#c62828 red darken-3\" });\n          } else {\n            M.toast({\n              html: \"Create post Success\",\n              classes: \"#43a047 green darken-1\",\n            });\n            history.push(\"/\");\n          }\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    }\n  }, [url]);\n\n  const postDetails = () => {\n    const data = new FormData();\n    data.append(\"file\", image);\n    data.append(\"upload_preset\", \"social_dev\");\n    data.append(\"cloud_name\", \"dcuyktl8e\");\n    fetch(\"https://api.cloudinary.com/v1_1/dcuyktl8e/image/upload\", {\n      method: \"post\",\n      body: data,\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        //console.log(data);\n        setUrl(data.url);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  return (\n    <div\n      className=\"card input-field\"\n      style={{\n        margin: \"30px auto\",\n        maxWidth: \"500px\",\n        padding: \"20px\",\n        textAlign: \"center\",\n      }}\n    >\n      <input\n        type=\"text\"\n        placeholder=\"title\"\n        value={title}\n        onChange={(e) => setTitle(e.target.value)}\n      />\n      <input\n        type=\"text\"\n        placeholder=\"body\"\n        value={body}\n        onChange={(e) => setBody(e.target.value)}\n      />\n      <div className=\"file-field input-field\">\n        <div className=\"btn  waves-effect waves-light #7e57c2 deep-purple darken-1\">\n          <span>Upload Image</span>\n          <input type=\"file\" onChange={(e) => setImage(e.target.files[0])} />\n        </div>\n        <div className=\"file-path-wrapper\">\n          <input className=\"file-path validate\" type=\"text\" />\n        </div>\n      </div>\n      <button\n        className=\"btn waves-effect waves-light #7e57c2 deep-purple darken-1\"\n        onClick={postDetails}\n      >\n        Submit Post\n      </button>\n    </div>\n  );\n};\n\nexport default CreatePost;\n","import React, { useState, useEffect, useContext } from \"react\";\nimport { UserContext } from \"../../App\";\nimport { Link } from \"react-router-dom\";\n\nconst SubscribesUserPosts = () => {\n  const [data, setData] = useState([]);\n  const { state, dispatch } = useContext(UserContext);\n  useEffect(() => {\n    fetch(\"http://localhost:5000/getsubpost\", {\n      headers: {\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\n      },\n    })\n      .then((response) => response.json())\n      .then((result) => {\n        // console.log(result);\n        setData(result.status.posts);\n      });\n  }, []);\n\n  const likePost = (id) => {\n    fetch(\"http://localhost:5000/like\", {\n      method: \"put\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\n      },\n      body: JSON.stringify({\n        postId: id,\n      }),\n    })\n      .then((res) => res.json())\n      .then((result) => {\n        const newData = data.map((item) => {\n          if (item._id === result._id) {\n            return result;\n          } else {\n            return item;\n          }\n        });\n\n        setData(newData);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  const unlikePost = (id) => {\n    fetch(\"http://localhost:5000/unlike\", {\n      method: \"put\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\n      },\n      body: JSON.stringify({\n        postId: id,\n      }),\n    })\n      .then((res) => res.json())\n      .then((result) => {\n        const newData = data.map((item) => {\n          if (item._id === result._id) {\n            return result;\n          } else {\n            return item;\n          }\n        });\n\n        setData(newData);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  const makeComment = (text, postId) => {\n    fetch(\"http://localhost:5000/comment\", {\n      method: \"put\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\n      },\n      body: JSON.stringify({\n        postId,\n        text,\n      }),\n    })\n      .then((res) => res.json())\n      .then((result) => {\n        const newData = data.map((item) => {\n          if (item._id === result._id) {\n            return result;\n          } else {\n            return item;\n          }\n        });\n        setData(newData);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  const deletePost = (postId) => {\n    fetch(`http://localhost:5000/deletepost/${postId}`, {\n      method: \"delete\",\n      headers: {\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\n      },\n    })\n      .then((response) => response.json())\n      .then((result) => {\n        // console.log(result);\n        const newData = data.filter((item) => {\n          return item._id !== result._id;\n        });\n        setData(newData);\n      });\n  };\n  return (\n    <div className=\"home\">\n      {data.map((item) => {\n        return (\n          <div className=\"card home-card\" key={item._id}>\n            <h5 style={{ padding: \"6px\" }}>\n              <Link\n                to={\n                  item.postedBy._id !== state._id\n                    ? \"/profile/\" + item.postedBy._id\n                    : \"/profile\"\n                }\n              >\n                {item.postedBy.name}\n              </Link>{\" \"}\n              {item.postedBy._id == state._id && (\n                <i\n                  className=\"material-icons\"\n                  style={{ float: \"right\", cursor: \"pointer\" }}\n                  onClick={() => deletePost(item._id)}\n                >\n                  delete\n                </i>\n              )}\n            </h5>\n            <div className=\"card-image\">\n              <img src={item.photo} alt=\"home-post\" />\n            </div>\n            <div className=\"card-content input-field\">\n              <i className=\"material-icons\" style={{ color: \"red\" }}>\n                favorite\n              </i>\n              {item.likes.includes(state._id) ? (\n                <i\n                  className=\"material-icons\"\n                  onClick={() => unlikePost(item.id)}\n                >\n                  thumb_down\n                </i>\n              ) : (\n                <i className=\"material-icons\" onClick={() => likePost(item.id)}>\n                  thumb_up\n                </i>\n              )}\n              <h6>{item.likes.length} likes</h6>\n              <h6>{item.title}</h6>\n              <p>{item.body}</p>\n              {item.comments.map((comment) => {\n                return (\n                  <h6>\n                    <span style={{ fontWeight: \"500\" }}>\n                      {comment.postedBy.name}\n                    </span>{\" \"}\n                    {comment.text}\n                  </h6>\n                );\n              })}\n              <form\n                onSubmit={(e) => {\n                  e.preventDefault();\n                  makeComment(e.target[0].value, item._id);\n                }}\n              >\n                <input type=\"text\" placeholder=\"add a comment\" />\n              </form>\n            </div>\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default SubscribesUserPosts;\n","export const initialState = null;\n\nexport const reducer = (state, action) => {\n  const { type, payload } = action;\n  if (type === \"USER\") {\n    return payload;\n  }\n  if (type === \"CLEAR\") {\n    return null;\n  }\n  if (type === \"UPDATE\") {\n    return {\n      ...state,\n      followers: payload.followers,\n      following: payload.following,\n    };\n  }\n  if (type === \"UPDATEPIC\") {\n    return {\n      ...state,\n      pic: payload,\n    };\n  }\n  return state;\n};\n","import React, { useEffect, createContext, useReducer, useContext } from \"react\";\nimport Navbar from \"./components/Navbar\";\nimport Home from \"./components/screens/Home\";\nimport Signin from \"./components/screens/Signin\";\nimport Profile from \"./components/screens/Profile\";\nimport UserProfile from \"./components/screens/UserProfile\";\nimport Signup from \"./components/screens/Signup\";\nimport CreatePost from \"./components/screens/CreatePost\";\nimport SubscribesUserPosts from \"./components/screens/SubscribesUserPosts\";\nimport { BrowserRouter, Route, Switch, useHistory } from \"react-router-dom\";\nimport { reducer, initialState } from \"./reducers/userReducer\";\nimport \"./App.css\";\n\nexport const UserContext = createContext();\n\nconst Routing = () => {\n  const history = useHistory();\n  const { state, dispatch } = useContext(UserContext);\n  useEffect(() => {\n    const user = JSON.parse(localStorage.getItem(\"user\"));\n    if (user) {\n      dispatch({ type: \"USER\", payload: user });\n    } else {\n      history.push(\"/signin\");\n    }\n  }, []);\n  return (\n    <Switch>\n      <Route exact path=\"/\" component={Home} />\n      <Route path=\"/signin\" component={Signin} />\n      <Route exact path=\"/profile\" component={Profile} />\n      <Route path=\"/profile/:userid\" component={UserProfile} />\n      <Route path=\"/signup\" component={Signup} />\n      <Route path=\"/create\" component={CreatePost} />\n      <Route path=\"/myfollowingpost\" component={SubscribesUserPosts} />\n    </Switch>\n  );\n};\n\nfunction App() {\n  const [state, dispatch] = useReducer(reducer, initialState);\n  return (\n    <UserContext.Provider value={{ state, dispatch }}>\n      <BrowserRouter>\n        <Navbar />\n        <Routing />\n      </BrowserRouter>\n    </UserContext.Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}